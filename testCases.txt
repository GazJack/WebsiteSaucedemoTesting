Testavimo scenarijai:


1. Testavimo scenarijaus pavadinimas:
Vartotojo prisijungimas prie internetinės parduotuvės "saucedemo".

Tikslas: 
Patikrinti, ar vartotojas gali sėkmingai prisijungti prie sistemos.

Testavimo sąlygos:
Naudotojas pasiekia prisijungimo puslapį;
Naudotojas turi pateiktus prisijungimo vardus ir vieną slaptažodį.

Įvesties duomenys:
Prisijungimo vardai: 
standard_user
locked_out_user
problem_user
performance_glitch_user
error_user
visual_user

Slaptažodis:
secret_sauce

Veiksmai:
Atidaryti internetinį puslapį;
Įvesti vieną iš pateiktų naudotojo vardų ir slaptažodį.
Spausti mygtuką 'login'.

Tikėtinas rezultatas:
Vartotojas sėkmingai prisijungia prie svetainės;
Vartotojas patenka į pagrindinį puslapį.

Tikrinami aspektai:
Ar vartotojas sėkmingai prisijungia?
Ar vartotojas pasiekia pagrindinį puslapį?

Rezultatai:
Jei sistema atliko visus veiksmus teisingai tuomet testas yra laikomas sėkmingu;
Jei buvo aptiktos klaidos turi būti pateikiamas klaidų ataskaitos (bugs.txt).

2. Testavimo scenarijaus pavadinimas:
Prekių  įdėjimas į krepšelį ir pašalinimas iš jo.

Testavimo sąlygos:
Vartotojas yra prisijungęs.

Veiksmai:
Pridėti skirtingas prekes į krepšelį (po 30 vnt.);
Patikrinti, ar visos prekės atsirado krepšelyje;
Pašalinti prekes iš krepšelio;
Spausti "Continue Shopping";
Pakartoti veiksmus su skirtingomis paskyromis.

Tikėtinas rezultatas:
Visos prekės atsiranda krepšelyje;
Vartotojas gali pašalinti prekes iš krepšelio;
Po pašalinimo krepšelis tampa tuščias;
Vartotojas grįžta į pirkinių sąrašo puslapį;

Tikrinami aspektai:
Ar visos prekės prisidėjo į krepšelį?
Ar visos prekės panaikintos iš krepšelio?

Rezultatai:
Jei sistema atliko visus veiksmus teisingai tuomet testas yra laikomas sėkmingu;
Jei buvo aptiktos klaidos turi būti pateikiamas klaidų ataskaitos (bugs.txt).

3. Testavimo scenarijaus pavadinimas:
Filtravimo ir rūšiavimo funkcionalumas internetinėje parduotuvėje "Saucedemo".

Testavimo tikslas:
Patikrinti, ar produktų sąrašo filtravimo ir rūšiavimo funkcionalumas veikia teisingai.

Testavimo sąlygos:
Vartotojas yra prisijungęs prie sistemos ir mato prekių sąrašą.

Veiksmai:

Atidaryti produktų sąrašą;
Pasirinkti rūšiavimo kriterijų (pvz.: nuo pigiausios iki brangiausios);
Patikrinti, ar produktai išrikiuojami pagal pasirinktą kriterijų;
Pasirinkti kitą rūšiavimo kriterijų (pvz., pagal pavadinimą A-Z);
Patikrinti, ar produktai išrikiuojami pagal naują kriterijų;
Pakartoti veiksmus su visais galimais rūšiavimo variantais.

Tikėtinas rezultatas:

Produktai išrikiuojami teisingai pagal pasirinktą filtravimo kriterijų;
Vartotojas gali bet kada keisti filtravimo nustatymus ir jie pritaikomi iškart.

Tikrinami aspektai:

Ar rūšiavimas veikia pagal visus numatytus kriterijus?
Ar produktų sąrašas atnaujinamas be puslapio perkrovimo?

Rezultatai:
Jei sistema atliko visus veiksmus teisingai, testas laikomas sėkmingu. 
Jei buvo aptiktos klaidos, pateikiama klaidų ataskaita (bugs.txt).

4. Testavimo scenarijaus pavadinimas:
Pirkimo ir mokėjimo funkcionalumas internetinėje parduotuvėje "Saucedemo".

Testavimo tikslas:
Patikrinti ar teisingai vykdomas apmokėjimas.

Testavimo sąlygos:
Prekių krepšelis užpildytas.

Įvesties duomenys:
Vardas: Zebras
Pavardė: Zebrauskas
Zip/Postal code: 987456

Veiksmai:
Eiti į pirkinių krepšelį;
Spausti Checkout;
Įvesti gavėjo duomenis (vardas, pavardė, pašto kodas);
Spausti "Continue";
Tikrinti, ar „Cancel“ mygtukas sugrąžina į krepšelį;
Spausti Finish;
Tikrinti, ar pirkimas sėkmingai įvykdytas;
Tikrinti, ar po apmokėjimo krepšelis liko tuščias.

Tikėtinas rezultatas:
Įvykdytas pirkimas;
Pateiktas patvirtinimo pranešimas apie sėkmingą pirkimą;
Po apmokėjimo krepšelis yra tuščias.

Tikrinami aspektai:
Ar galima įvesti duomenis?
Ar veikia "Cancel" mygtukas?
Ar galutiniame apmokėjime yra tiek prekių kiek jų buvo įdėta į krepšelį?
Ar pirkimo patvirtinimo puslapis rodomas?
Ar nuskaičiavo tikslią pinigų sumą?
Ar po sėkmingo apmokėjimo gaunama sėkmingo apsipirkimo žinutė?

Rezultatai:
Jei sistema atliko visus veiksmus teisingai tuomet testas yra laikomas sėkmingu;
Jei buvo aptiktos klaidos turi būti pateikiamas klaidų ataskaitos (bugs.txt).


5. Testavimo scenarijaus pavadinimas:
Atsijungimo funkcionalumas.

Testavimo tikslas:
Patikrinti, ar vartotojas gali sėkmingai atsijungti nuo sistemos.

Testavimo sąlygos:
Vartotojas yra prisijungęs prie "Saucedemo" paskyros.

Veiksmai:

Atidaryti meniu paspaudžiant ant „burger“ ikonėlės;
Pasirinkti „Logout“;
Patikrinti, ar vartotojas buvo išregistruotas ir grąžintas į prisijungimo puslapį;
Bandymas grįžti į pagrindinį puslapį naudojant naršyklės „Back“ mygtuką;
Pakartoti testą su skirtingomis paskyromis.

Tikėtinas rezultatas:

Vartotojas sėkmingai atsijungia ir grąžinamas į prisijungimo puslapį;
Po atsijungimo vartotojas negali pasiekti apsipirkimo puslapio.

Tikrinami aspektai:

Ar vartotojas grįžta į prisijungimo puslapį po atsijungimo?
Ar galima grįžti į pagrindinį puslapį naudojant naršyklės mygtukus?

Rezultatai:
Jei sistema atliko visus veiksmus teisingai, testas laikomas sėkmingu. 
Jei buvo aptiktos klaidos, pateikiama klaidų ataskaita (bugs.txt).


______________________________________________________________________________________________________________________________________________________

Test Scenarios:

1. Test Scenario Name:
User Login to the Online Store "saucedemo".

Purpose: 
To check whether the user can successfully log in to the system.

Test Conditions:
The user reaches the login page;
The user has the provided login names and one password.

Input Data:
Login Names: 
standard_user
locked_out_user
problem_user
performance_glitch_user
error_user
visual_user

Password:
secret_sauce

Actions:
Open the web page;
Enter one of the provided usernames and passwords.
Press the 'login' button.

Expected Result:
The user successfully logs in to the website;
The user reaches the home page.

Aspects to be tested:
Does the user successfully log in?
Does the user reach the home page?

Results:
If the system performed all the actions correctly then the test is considered successful;
If errors were detected a bug report (bugs.txt) must be submitted.

2. Test scenario name:
Adding and removing items from the cart.

Testing conditions:
User is logged in.

Actions:
Add different items to the cart;
Check if all items have appeared in the cart;
Remove items from the cart;
Click "Continue Shopping";
Repeat the actions with different accounts.

Expected result:
All items appear in the cart;
The user can remove items from the cart;
After removal, the cart becomes empty;
The user returns to the shopping list page;

Aspects to be checked:
Have all items been added to the cart?
Have all items been removed from the cart?

Results:
If the system performed all actions correctly, then the test is considered successful;
If errors were detected, an error report (bugs.txt) must be submitted.

3. Test scenario name:
Filtering and sorting functionality in the online store "Saucedemo".

Testing goal:
To check whether the filtering and sorting functionality of the product list works correctly.

Testing conditions:
The user is logged in to the system and sees the list of products.

Actions:

Open the product list;

Select a sorting criterion (e.g. from the cheapest to the most expensive);

Check whether the products are sorted according to the selected criterion;

Select another sorting criterion (e.g. by name A-Z);
Check whether the products are sorted according to the new criterion;
Repeat the steps with all possible sorting options.

Expected result:

The products are sorted correctly according to the selected filtering criterion;

The user can change the filtering settings at any time and they are applied immediately.

Aspects to be checked:

Does sorting work according to all expected criteria?

Does the product list update without reloading the page?

Results:
If the system performed all actions correctly, the test is considered successful. 
If errors were detected, a bug report (bugs.txt) is provided.

4. Test scenario name:
Purchase and payment functionality in the online store "Saucedemo".

Testing purpose:
To check whether the payment is made correctly.

Testing conditions:
The shopping cart is full.

Input data:
First name: Zebras
Last name: Zebrauskas
Zip/Postal code: 987456

Actions:
Go to the shopping cart;
Click Checkout;
Enter the recipient's data (first name, last name, postal code);
Click "Continue";
Check whether the "Cancel" button returns to the cart;
Click Finish;
Check whether the purchase was successfully completed;
Check whether the cart remained empty after payment.

Expected result:
The purchase was completed;
A confirmation message about a successful purchase was provided;
After payment, the cart is empty.

Aspects to be checked:
Is it possible to enter data?
Is the "Cancel" button working?
Does the final payment contain as many items as were added to the cart?
Is the purchase confirmation page displayed?
Is the exact amount of money charged?
Is a successful purchase message received after successful payment?

Results:
If the system performed all actions correctly, then the test is considered successful;
If errors were detected, an error report (bugs.txt) must be submitted.

5. Test scenario name:
Logout functionality.

Testing objective:
To check if the user can successfully log out of the system.

Testing conditions:
The user is logged in to the "Saucedemo" account.

Actions:

Open the menu by clicking on the "burger" icon;
Select "Logout";
Check if the user has been logged out and returned to the login page;
Attempt to return to the home page using the browser's "Back" button;
Repeat the test with different accounts.

Expected result:

The user successfully logs out and is returned to the login page;
After logging out, the user cannot access the shopping page.

Aspects to be tested:

Does the user return to the login page after logging out?
Is it possible to return to the home page using the browser buttons?

Results:
If the system performed all the actions correctly, the test is considered successful. 
If errors were detected, a bug report (bugs.txt) is provided.